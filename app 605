import React from 'react';
import { 
  StyleSheet, 
  Text, 
  View, 
  TextInput, 
  TouchableHighlight, 
  Picker,
  Platform} from 'react-native';
  import {Permissions, Location, Constants} from 'expo';
import Geocoder from 'react-native-geocoding';

Geocoder.init("AIzaSyCQ770gcQma7ycQo3whNwwwq6IFmPAfOpM");


export default class App extends React.Component {
  constructor(){
    super()

    this.state={
      direc:'',
      ciudad:'',
      comment:'',
      pais:'',
      PickerValue:'',
      latitude: null,
      longitude: null,
    };
    
  }
  
  componentWillMount() {
    if (Platform.OS === 'android' && !Constants.isDevice) {
      this.setState({
        errorMessage: 'Oops, this will not work on Sketch in an Android emulator. Try it on your device!',
      });
    } else {
      this._getLocationAsync();
    }
    let lattext = 'Waiting..';
    let lontext = 'Waiting..';
    if (this.state.errorMessage) {
      lattext = this.state.errorMessage;
    } else if (this.state.latitude) {
      lattext = JSON.stringify(this.state.latitude);
      lontext = JSON.stringify(this.state.longitude);

    }
    
    Geocoder.from(lattext, lontext)
		.then(json => {
      var addressComponent = json.results[0].formatted_address;
      console.log(addressComponent);
      
      
		})
    .catch(error => console.warn(error));
    
  }

  _getLocationAsync = async () => {
    let { status } = await Permissions.askAsync(Permissions.LOCATION);
    if (status !== 'granted') {
      this.setState({
        errorMessage: 'Permission to access location was denied',
      });
    }

    let location = await Location.getCurrentPositionAsync({});
    this.setState({ latitude:location.coords.latitude , longitude:location.coords.longitude });
  };
  componentDidMount() {
    this.interval = setInterval(() => this.setState({ Location: this._getLocationAsync() }), 1000);
  }

  
  changeDirec(direc){
    this.setState({direc})
  }
  changeCiudad(ciudad){
    this.setState({ciudad})
  }
  changePais(pais){
    this.setState({pais})
  }
  changeComment(comment){
    this.setState({comment})
  }
  buttonPressed(){
    if(this.state.comment&&this.state.pais&&this.state.direc&&this.state.ciudad&&this.state.PickerValue!=""){
      alert('Completó todos los campos correctamente')
    }else{
      alert('Por favor complete todos los campos')  
    } 
  }
  render() {
    let lattext = 'Waiting..';
    let lontext = 'Waiting..';
    if (this.state.errorMessage) {
      lattext = this.state.errorMessage;
    } else if (this.state.latitude) {
      lattext = JSON.stringify(this.state.latitude);
      lontext = JSON.stringify(this.state.longitude);

    }
    /*
    
    */
    return (
      <View style={styles.container}>
        <View>
          <Text style={styles.title}>Formulario de reportes</Text>
          <Text>Tipo de obstáculo</Text>
          <Picker
          style={{width:'100%'}}
          selectedValue={this.state.PickerValue}
          onValueChange={(itemValue,itemIndex) => this.setState
          ({PickerValue:itemValue})}
          >
          <Picker.Item label="Seleccionar" value="" />
          <Picker.Item label="Transitable" value="Transitable" />
          <Picker.Item label="Parcialmente Transitable" value="Parcialmente Transitable" />
          <Picker.Item label="Intransitable" value="intransitable" />
          </Picker>
          
          <Text>Dirección</Text>
          <TextInput 
            style={styles.input}
            placeholder=" Libertador 6532"
            value={this.state.direc}
            onChangeText={(direc) => this.changeDirec(direc)}
          />
          <Text>Ciudad</Text>
          <TextInput 
            style={styles.input}
            placeholder=" CABA"
            value={this.state.ciudad}
            onChangeText={(ciudad) => this.changeCiudad(ciudad)}
          />
          <Text>Pais</Text>
          <TextInput 
            style={styles.input}
            placeholder=" Argentina"
            value={this.state.pais}
            onChangeText={(pais) => this.changePais(pais)}
          />
          
          <Text>Comentarios</Text>
          <TextInput
            multiline={true} 
            style={[styles.input, styles.textArea]}
            placeholder=" Pozo profundo"
            value={this.state.comment}
            onChangeText={(comment) => this.changeComment(comment)}
          />
          <TouchableHighlight
            style={styles.button}
            onPress={() => this.buttonPressed()}
            >
            <Text style={styles.textButton}>Reportar</Text>
          </TouchableHighlight>
          <Text style={styles.paragraph}>{lattext}</Text>
          <Text style={styles.paragraph}>{lontext}</Text>
        </View>
      </View>
    );
  }
}
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    marginTop:50,
    paddingLeft: 15,
    paddingRight: 15
  },
  direc:{
    textAlign:'center',
    fontSize: 18,
    marginBottom: 20
  },
  ciudad:{
    textAlign:'center',
    fontSize: 18,
    marginBottom: 20
  },
  pais:{
    textAlign:'center',
    fontSize: 18,
    marginBottom: 20
  },
  title:{
    textAlign:'center',
    fontSize: 22,
    marginBottom: 30
  },
  button:{
    backgroundColor: 'red',
    paddingTop: 15,
    paddingBottom: 15
  },
  textButton:{
    textAlign:'center',
    color: 'white'
  },
  input: {
    height:40,
    borderColor: '#ccc',
    marginBottom:20,
    borderWidth:2
  },
  textArea:{
    height:60
  }
});
